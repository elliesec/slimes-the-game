{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/combat-sandbox-1/assets/mimic.jpg","webpack:///./src/combat-sandbox-1/enums.ts","webpack:///./src/combat-sandbox-1/Encounter.ts","webpack:///./src/common/functions.ts","webpack:///./src/combat-sandbox-1/components/EncounterView/EncounterScene.tsx","webpack:///./src/combat-sandbox-1/redux/actions/encounter-actions.ts","webpack:///./src/combat-sandbox-1/redux/actions/game-actions.ts","webpack:///./src/combat-sandbox-1/components/EncounterView/EncounterSelection.tsx","webpack:///./src/combat-sandbox-1/components/EncounterView/EncounterView.tsx","webpack:///./src/combat-sandbox-1/redux/actions/player-actions.ts","webpack:///./src/combat-sandbox-1/redux/reducers/player-reducer.ts","webpack:///./src/combat-sandbox-1/components/PlayerConfigPanel/PlayerConfigPanelInput.tsx","webpack:///./src/combat-sandbox-1/components/PlayerConfigPanel/PlayerConfigPanel.tsx","webpack:///./src/combat-sandbox-1/encounter1.ts","webpack:///./src/combat-sandbox-1/CombatSandbox1.tsx","webpack:///./src/combat-sandbox-1/redux/reducers/current-scene-reducer.ts","webpack:///./src/combat-sandbox-1/redux/reducers/active-encounter-reducer.ts","webpack:///./src/combat-sandbox-1/redux/reducers/all-encounters-reducer.ts","webpack:///./src/combat-sandbox-1/redux/reducers/encounter-reducer.ts","webpack:///./src/combat-sandbox-1/redux/root-reducer.ts","webpack:///./src/combat-sandbox-1/redux/store.ts","webpack:///./src/combatSandbox1.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Scene","EncounterStageType","StageOptionType","noop","args","mimic","activeEncounter","encounter","stage","encounterStage","stages","find","id","className","text","map","type","OPTIONS","instanceOfOptionsEncounterStage","this","renderOptionsStage","src","alt","options","option","renderStageOption","state","active","dispatch","EncounterActions","GameActions","setScene","scene","SET_SCENE","payload","props","super","selectedEncounter","onSelectChange","onSelectEncounter","encounters","htmlFor","onChange","disabled","onClick","e","encounterId","currentTarget","setState","defaultProps","values","all","START_ENCOUNTER","startEncounter","ENCOUNTER","currentScene","ENCOUNTER_SELECT","ENCOUNTER_END","renderView","PlayerActions","setPlayer","player","SET_PLAYER","setStat","statName","SET_PLAYER_STAT","reducerMap","SET_PLAYER_DESCRIPTION","PlayerConfigPanelInput","label","ConnectedPlayerConfigPanel","maxWillpower","willpower","strength","dexterity","constitution","wisdom","intelligence","charisma","setDescription","Number","onPlayerReset","onNameChange","onStrengthChange","onDexterityChange","onConstitutionChange","onWisdomChange","onIntelligenceChange","onCharismaChange","onMaxWillpowerChange","onWillpowerChange","min","encounter1","initialStageId","DIFFICULTY_CHECK","requirements","difficultyCheck","outcomes","FLAVOUR","nextStageId","END_SCENE","continueText","load","ConnectedCombatSandbox1","REGISTER_ENCOUNTER","reducers","console","log","warn","encounterReducer","action","reducer","rootReducer","store","appRoot","document","getElementById"],"mappings":"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","file":"combatSandbox1.7162052c64fb45f9e196.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/slimes-the-game\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([44,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"assets/c627a862d41d9026b5ade2a0fda5b886.jpg\";","export enum Scene {\r\n    ENCOUNTER_SELECT = 'ENCOUNTER_SELECT',\r\n    ENCOUNTER = 'ENCOUNTER',\r\n    ENCOUNTER_END = 'ENCOUNTER_END',\r\n}\r\n","export interface OptionRequirements {\r\n    strength?: number;\r\n    dexterity?: number;\r\n    constitution?: number;\r\n    wisdom?: number;\r\n    intelligence?: number;\r\n    charisma?: number;\r\n}\r\n\r\nexport enum EncounterStageType {\r\n    OPTIONS = 'options',\r\n    FLAVOUR = 'flavour',\r\n    END_SCENE = 'endScene',\r\n}\r\n\r\nexport enum StageOptionType {\r\n    DIFFICULTY_CHECK = 'difficultyCheck',\r\n    FLAVOUR = 'flavour',\r\n}\r\n\r\nexport interface EncounterOptionBase {\r\n    type: StageOptionType;\r\n    text: string;\r\n}\r\n\r\nexport interface DifficultyCheckOptionOutcome {}\r\n\r\nexport interface DifficultyCheckOptionOutcomes {\r\n    criticalFailure: DifficultyCheckOptionOutcome;\r\n    failure: DifficultyCheckOptionOutcome;\r\n    success: DifficultyCheckOptionOutcome;\r\n    criticalSuccess: DifficultyCheckOptionOutcome;\r\n}\r\n\r\nexport interface DifficultyCheckOption extends EncounterOptionBase {\r\n    type: StageOptionType.DIFFICULTY_CHECK;\r\n    requirements?: OptionRequirements;\r\n    difficultyCheck: number;\r\n    outcomes: DifficultyCheckOptionOutcome;\r\n}\r\n\r\nexport interface FlavourOption extends EncounterOptionBase {\r\n    type: StageOptionType.FLAVOUR;\r\n    nextStageId: number;\r\n}\r\n\r\nexport type EncounterOption = DifficultyCheckOption | FlavourOption;\r\n\r\nexport interface EncounterStageBase {\r\n    id: number;\r\n    type: EncounterStageType;\r\n    text: string[];\r\n}\r\n\r\nexport interface OptionsEncounterStage extends EncounterStageBase {\r\n    type: EncounterStageType.OPTIONS;\r\n    options: EncounterOption[];\r\n}\r\n\r\nexport interface FlavourEncounterStage extends EncounterStageBase {\r\n    type: EncounterStageType.FLAVOUR;\r\n    continueText: string;\r\n    nextStageId: number;\r\n}\r\n\r\nexport interface EndSceneEncounterStage extends EncounterStageBase {\r\n    type: EncounterStageType.END_SCENE;\r\n    continueText: string;\r\n}\r\n\r\nexport type EncounterStage =\r\n    | OptionsEncounterStage\r\n    | FlavourEncounterStage\r\n    | EndSceneEncounterStage;\r\n\r\nexport interface Encounter {\r\n    id: string;\r\n    name: string;\r\n    stages: EncounterStage[];\r\n    initialStageId: number;\r\n}\r\n\r\nexport function instanceOfDifficultyCheckOption(\r\n    option: EncounterOption\r\n): option is DifficultyCheckOption {\r\n    return option.type === StageOptionType.DIFFICULTY_CHECK;\r\n}\r\n\r\nexport function instanceOfFlavourOption(\r\n    option: EncounterOption\r\n): option is FlavourOption {\r\n    return option.type === StageOptionType.FLAVOUR;\r\n}\r\n\r\nexport function instanceOfOptionsEncounterStage(\r\n    stage: EncounterStage\r\n): stage is OptionsEncounterStage {\r\n    return stage.type === EncounterStageType.OPTIONS;\r\n}\r\n\r\nexport function instanceOfFlavourEncounterStage(\r\n    stage: EncounterStage\r\n): stage is FlavourEncounterStage {\r\n    return stage.type === EncounterStageType.FLAVOUR;\r\n}\r\n\r\nexport function instanceOfEndSceneEncounterStage(\r\n    stage: EncounterStage\r\n): stage is EndSceneEncounterStage {\r\n    return stage.type === EncounterStageType.END_SCENE;\r\n}\r\n","export type Callback<T> = (t: T) => void;\r\n\r\nexport function noop(...args: any[]): void {\r\n    return;\r\n}\r\n","import { Component, h, VNode } from 'preact';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    EncounterOption,\r\n    instanceOfOptionsEncounterStage,\r\n    OptionsEncounterStage,\r\n} from '../../Encounter';\r\nimport { ActiveEncounter, State } from '../../redux/store';\r\nimport './EncounterScene.scss';\r\n\r\nexport interface EncounterSceneProps {\r\n    activeEncounter: ActiveEncounter;\r\n}\r\n\r\nconst mimic = require('../../assets/mimic.jpg');\r\n\r\nexport class EncounterSceneComponent extends Component<EncounterSceneProps> {\r\n    public render({ activeEncounter }: EncounterSceneProps): VNode {\r\n        const { encounter, stage } = activeEncounter;\r\n        const encounterStage = encounter.stages.find((s) => s.id === stage);\r\n        return (\r\n            <div className=\"EncounterScene\">\r\n                <div className=\"encounter-text\">\r\n                    <div className=\"card\">\r\n                        <h3>Encounter!</h3>\r\n                        <div className=\"stage-text\">\r\n                            {encounterStage.text.map((t) => (\r\n                                <p>{t}</p>\r\n                            ))}\r\n                        </div>\r\n                        {instanceOfOptionsEncounterStage(encounterStage) &&\r\n                            this.renderOptionsStage(encounterStage)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"encounter-image\">\r\n                    <div className=\"card\">\r\n                        <img src={mimic} alt=\"Lewd Pictures\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderOptionsStage(stage: OptionsEncounterStage): VNode {\r\n        return (\r\n            <div className=\"options-stage\">\r\n                <p>\r\n                    <strong>What do you do?</strong>\r\n                </p>\r\n                <ul className=\"options\">\r\n                    {stage.options.map((option) =>\r\n                        this.renderStageOption(option)\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderStageOption(option: EncounterOption): VNode {\r\n        return <li className=\"option\">{option.text}</li>;\r\n    }\r\n}\r\n\r\nexport const EncounterScene = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EncounterSceneComponent as any);\r\n\r\nfunction mapStateToProps(state: State): Partial<EncounterSceneProps> {\r\n    return {\r\n        activeEncounter: state.encounter.active,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): Partial<EncounterSceneProps> {\r\n    return {};\r\n}\r\n","import { Encounter } from '../../Encounter';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nexport enum EncounterActions {\r\n    REGISTER_ENCOUNTER = 'REGISTER_ENCOUNTER',\r\n    START_ENCOUNTER = 'START_ENCOUNTER',\r\n}\r\n\r\nexport function registerEncounter(\r\n    encounter: Encounter\r\n): PayloadAction<Encounter> {\r\n    return { type: EncounterActions.REGISTER_ENCOUNTER, payload: encounter };\r\n}\r\n\r\nexport function startEncounter(encounter: Encounter): PayloadAction<Encounter> {\r\n    return { type: EncounterActions.START_ENCOUNTER, payload: encounter };\r\n}\r\n","import { Scene } from '../../enums';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nexport enum GameActions {\r\n    SET_SCENE = 'SET_SCENE',\r\n}\r\n\r\nexport function setScene(scene: Scene): PayloadAction<Scene> {\r\n    return { type: GameActions.SET_SCENE, payload: scene };\r\n}\r\n","import { Component, h, VNode } from 'preact';\r\nimport { JSXInternal } from 'preact/src/jsx';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { Callback, noop } from '../../../common/functions';\r\nimport { Encounter } from '../../Encounter';\r\nimport { Scene } from '../../enums';\r\nimport { startEncounter } from '../../redux/actions/encounter-actions';\r\nimport { setScene } from '../../redux/actions/game-actions';\r\nimport { State } from '../../redux/store';\r\nimport './EncounterSelection.scss';\r\nimport TargetedEvent = JSXInternal.TargetedEvent;\r\n\r\nexport interface EncounterSelectionProps {\r\n    encounters: Encounter[];\r\n    onSelectEncounter: Callback<Encounter>;\r\n}\r\n\r\nexport interface EncounterSelectionState {\r\n    selectedEncounter: Encounter;\r\n}\r\n\r\nexport class EncounterSelectionComponent extends Component<\r\n    EncounterSelectionProps,\r\n    EncounterSelectionState\r\n> {\r\n    public static defaultProps: Partial<EncounterSelectionProps> = {\r\n        encounters: [],\r\n        onSelectEncounter: noop,\r\n    };\r\n\r\n    public constructor(props: EncounterSelectionProps) {\r\n        super(props);\r\n        this.state = { selectedEncounter: null };\r\n        this.onSelectChange = this.onSelectChange.bind(this);\r\n        this.onSelectEncounter = this.onSelectEncounter.bind(this);\r\n    }\r\n\r\n    public render({ encounters }: EncounterSelectionProps): VNode {\r\n        return (\r\n            <div className=\"EncounterSelection\">\r\n                <h3>Encounter Selection</h3>\r\n                <div className=\"encounter-stats\">\r\n                    <ul className=\"encounter-stats-list\">\r\n                        <li>\r\n                            <span className=\"key\">Encounters Available: </span>\r\n                            <span className=\"value\">{encounters.length}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <hr />\r\n                    <div className=\"encounter-selection-form\">\r\n                        <label htmlFor=\"encounter-select\">\r\n                            <span>Select Encounter: </span>\r\n                            <select\r\n                                id=\"encounter-select\"\r\n                                value={this.state.selectedEncounter?.id}\r\n                                onChange={this.onSelectChange}\r\n                            >\r\n                                <option value=\"\" />\r\n                                {encounters.map((encounter) => (\r\n                                    <option value={encounter.id}>\r\n                                        {encounter.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n                        <button\r\n                            disabled={!this.state.selectedEncounter}\r\n                            onClick={this.onSelectEncounter}\r\n                        >\r\n                            Start Encounter\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onSelectChange(e: TargetedEvent<HTMLSelectElement>): void {\r\n        const encounterId = e.currentTarget.value;\r\n        const encounter =\r\n            this.props.encounters.find((e) => e.id === encounterId) ?? null;\r\n        this.setState({ selectedEncounter: encounter });\r\n    }\r\n\r\n    private onSelectEncounter(): void {\r\n        const { selectedEncounter } = this.state;\r\n        if (selectedEncounter) {\r\n            this.props.onSelectEncounter(selectedEncounter);\r\n        }\r\n    }\r\n}\r\n\r\nexport const EncounterSelection = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EncounterSelectionComponent as any);\r\n\r\nfunction mapStateToProps(state: State): Partial<EncounterSelectionProps> {\r\n    return {\r\n        encounters: Object.values(state.encounter.all),\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(\r\n    dispatch: Dispatch\r\n): Partial<EncounterSelectionProps> {\r\n    return {\r\n        onSelectEncounter(encounter: Encounter): void {\r\n            dispatch(startEncounter(encounter));\r\n            dispatch(setScene(Scene.ENCOUNTER));\r\n        },\r\n    };\r\n}\r\n","import { h, VNode } from 'preact';\r\nimport { connect } from 'react-redux';\r\nimport { Scene } from '../../enums';\r\nimport { State } from '../../redux/store';\r\nimport { EncounterScene } from './EncounterScene';\r\nimport { EncounterSelection } from './EncounterSelection';\r\nimport './EncounterView.scss';\r\n\r\nexport interface EncounterViewProps {\r\n    currentScene: Scene;\r\n}\r\n\r\nconst renderView = (currentScene: Scene): VNode => {\r\n    switch (currentScene) {\r\n        case Scene.ENCOUNTER_SELECT:\r\n            return <EncounterSelection />;\r\n        case Scene.ENCOUNTER:\r\n            return <EncounterScene />;\r\n        case Scene.ENCOUNTER_END:\r\n            return <div>Encounter End</div>;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport const EncounterView = connect(mapStateToProps)(\r\n    ({ currentScene }): VNode => {\r\n        return <div className=\"EncounterView\">{renderView(currentScene)}</div>;\r\n    }\r\n);\r\n\r\nfunction mapStateToProps({ currentScene }: State): Partial<EncounterViewProps> {\r\n    return { currentScene };\r\n}\r\n","import { Player, PlayerDescription, PlayerStats } from '../../Player';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nexport enum PlayerActions {\r\n    SET_PLAYER = 'SET_PLAYER',\r\n    SET_PLAYER_DESCRIPTION = 'SET_PLAYER_DESCRIPTION',\r\n    SET_PLAYER_STAT = 'SET_PLAYER_STAT',\r\n}\r\n\r\nexport interface PlayerStatUpdate {\r\n    statName: keyof PlayerStats;\r\n    value: number;\r\n}\r\n\r\nexport interface PlayerDescriptionUpdate {\r\n    key: keyof PlayerDescription;\r\n    value: string;\r\n}\r\n\r\nexport function setPlayer(player: Player): PayloadAction<Player> {\r\n    return { type: PlayerActions.SET_PLAYER, payload: player };\r\n}\r\n\r\nexport function setDescription(\r\n    key: keyof PlayerDescription,\r\n    value: string\r\n): PayloadAction<PlayerDescriptionUpdate> {\r\n    return {\r\n        type: PlayerActions.SET_PLAYER_DESCRIPTION,\r\n        payload: { key, value },\r\n    };\r\n}\r\n\r\nexport function setStat(\r\n    statName: keyof PlayerStats,\r\n    value: number\r\n): PayloadAction<PlayerStatUpdate> {\r\n    return {\r\n        type: PlayerActions.SET_PLAYER_STAT,\r\n        payload: { statName, value },\r\n    };\r\n}\r\n","import { Action, Reducer } from 'redux';\r\nimport { Player } from '../../Player';\r\nimport {\r\n    PlayerActions,\r\n    PlayerDescriptionUpdate,\r\n    PlayerStatUpdate,\r\n} from '../actions/player-actions';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nconst reducerMap: Record<string, Reducer<Player>> = {\r\n    [PlayerActions.SET_PLAYER]: setPlayerReducer,\r\n    [PlayerActions.SET_PLAYER_DESCRIPTION]: setPlayerDescriptionReducer,\r\n    [PlayerActions.SET_PLAYER_STAT]: setPlayerStatReducer,\r\n};\r\n\r\nexport function playerReducer(\r\n    player = defaultPlayer(),\r\n    action: Action\r\n): Player {\r\n    const reducer = reducerMap[action.type];\r\n    return reducer ? reducer(player, action) : player;\r\n}\r\n\r\nexport function defaultPlayer(): Player {\r\n    return {\r\n        name: 'Heroine',\r\n        maxWillpower: 10,\r\n        willpower: 10,\r\n        strength: 2,\r\n        dexterity: 2,\r\n        constitution: 2,\r\n        wisdom: 2,\r\n        intelligence: 2,\r\n        charisma: 2,\r\n    };\r\n}\r\n\r\nfunction setPlayerReducer(\r\n    player: Player,\r\n    { payload }: PayloadAction<Player>\r\n): Player {\r\n    if (payload === player) {\r\n        return player;\r\n    }\r\n    return { ...payload };\r\n}\r\n\r\nfunction setPlayerDescriptionReducer(\r\n    player: Player,\r\n    { payload: { key, value } }: PayloadAction<PlayerDescriptionUpdate>\r\n): Player {\r\n    if (player[key] === value) {\r\n        return player;\r\n    }\r\n    return { ...player, [key]: value };\r\n}\r\n\r\nfunction setPlayerStatReducer(\r\n    player: Player,\r\n    { payload: { statName, value } }: PayloadAction<PlayerStatUpdate>\r\n): Player {\r\n    if (player[statName] === value) {\r\n        return player;\r\n    }\r\n    return { ...player, [statName]: value };\r\n}\r\n","import { h, VNode } from 'preact';\r\nimport { JSXInternal } from 'preact/src/jsx';\r\nimport HTMLAttributes = JSXInternal.HTMLAttributes;\r\n\r\nexport interface PlayerConfigPanelInputProps<T>\r\n    extends HTMLAttributes<HTMLInputElement> {\r\n    id: string;\r\n    label: string;\r\n}\r\n\r\nexport const PlayerConfigPanelInput = <T extends unknown>(\r\n    props: PlayerConfigPanelInputProps<T>\r\n): VNode => (\r\n    <label htmlFor={props.id}>\r\n        <span>{props.label}:</span>\r\n        <input {...props} />\r\n    </label>\r\n);\r\n","import { h, VNode } from 'preact';\r\nimport { JSXInternal } from 'preact/src/jsx';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { Callback } from '../../../common/functions';\r\nimport { Player } from '../../Player';\r\nimport {\r\n    setDescription,\r\n    setPlayer,\r\n    setStat,\r\n} from '../../redux/actions/player-actions';\r\nimport { defaultPlayer } from '../../redux/reducers/player-reducer';\r\nimport { State } from '../../redux/store';\r\nimport './PlayerConfigPanel.scss';\r\nimport { PlayerConfigPanelInput } from './PlayerConfigPanelInput';\r\nimport TargetedEvent = JSXInternal.TargetedEvent;\r\n\r\nexport interface PlayerConfigPanelProps {\r\n    player: Player;\r\n    onPlayerReset: () => void;\r\n    onNameChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onStrengthChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onDexterityChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onConstitutionChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onWisdomChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onIntelligenceChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onCharismaChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onMaxWillpowerChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onWillpowerChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n}\r\n\r\nexport const PlayerConfigPanel = ({\r\n    player,\r\n    onPlayerReset,\r\n    onNameChange,\r\n    onStrengthChange,\r\n    onDexterityChange,\r\n    onConstitutionChange,\r\n    onWisdomChange,\r\n    onIntelligenceChange,\r\n    onCharismaChange,\r\n    onMaxWillpowerChange,\r\n    onWillpowerChange,\r\n}: PlayerConfigPanelProps): VNode => (\r\n    <div className=\"PlayerConfigPanel\">\r\n        <h3 className=\"header-with-buttons\">\r\n            <span>Player</span>\r\n            <button onClick={onPlayerReset}>Reset</button>\r\n        </h3>\r\n        <PlayerConfigPanelInput\r\n            id=\"name-input\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            value={player.name}\r\n            onChange={onNameChange}\r\n        />\r\n        <h4>Attributes</h4>\r\n        <div className=\"attribute-config\">\r\n            <PlayerConfigPanelInput\r\n                id=\"strength-input\"\r\n                label=\"Strength\"\r\n                type=\"number\"\r\n                value={player.strength}\r\n                min={1}\r\n                onChange={onStrengthChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"dexterity-input\"\r\n                label=\"Dexterity\"\r\n                type=\"number\"\r\n                value={player.dexterity}\r\n                min={1}\r\n                onChange={onDexterityChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"constitution-input\"\r\n                label=\"Constitution\"\r\n                type=\"number\"\r\n                value={player.constitution}\r\n                min={1}\r\n                onChange={onConstitutionChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"wisdom-input\"\r\n                label=\"Wisdom\"\r\n                type=\"number\"\r\n                value={player.wisdom}\r\n                min={1}\r\n                onChange={onWisdomChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"intelligence-input\"\r\n                label=\"Intelligence\"\r\n                type=\"number\"\r\n                value={player.intelligence}\r\n                min={1}\r\n                onChange={onIntelligenceChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"charisma-input\"\r\n                label=\"Charisma\"\r\n                type=\"number\"\r\n                value={player.charisma}\r\n                min={1}\r\n                onChange={onCharismaChange}\r\n            />\r\n        </div>\r\n        <hr />\r\n        <h4>Resources</h4>\r\n        <PlayerConfigPanelInput\r\n            id=\"max-willpower-input\"\r\n            label=\"Max Willpower\"\r\n            type=\"number\"\r\n            value={player.maxWillpower}\r\n            min={1}\r\n            onChange={onMaxWillpowerChange}\r\n        />\r\n        <PlayerConfigPanelInput\r\n            id=\"willpower-input\"\r\n            label=\"Willpower\"\r\n            type=\"number\"\r\n            value={player.willpower}\r\n            min={1}\r\n            onChange={onWillpowerChange}\r\n        />\r\n    </div>\r\n);\r\n\r\nfunction mapStateToProps(state: State): Partial<PlayerConfigPanelProps> {\r\n    return {\r\n        player: state.player,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(\r\n    dispatch: Dispatch\r\n): Partial<PlayerConfigPanelProps> {\r\n    return {\r\n        onPlayerReset(): void {\r\n            dispatch(setPlayer(defaultPlayer()));\r\n        },\r\n        onNameChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = e.currentTarget.value;\r\n            dispatch(setDescription('name', value));\r\n        },\r\n        onStrengthChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('strength', value));\r\n        },\r\n        onDexterityChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('dexterity', value));\r\n        },\r\n        onConstitutionChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('constitution', value));\r\n        },\r\n        onWisdomChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('wisdom', value));\r\n        },\r\n        onIntelligenceChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('intelligence', value));\r\n        },\r\n        onCharismaChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('charisma', value));\r\n        },\r\n        onMaxWillpowerChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('maxWillpower', value));\r\n        },\r\n        onWillpowerChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('willpower', value));\r\n        },\r\n    };\r\n}\r\n\r\nexport const ConnectedPlayerConfigPanel = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PlayerConfigPanel);\r\n","import { Encounter, EncounterStageType, StageOptionType } from './Encounter';\r\n\r\nexport const encounter1: Encounter = {\r\n    id: 'encounter1',\r\n    name: 'An Old Chest',\r\n    initialStageId: 0,\r\n    stages: [\r\n        {\r\n            id: 0,\r\n            type: EncounterStageType.OPTIONS,\r\n            text: ['You see an old chest. It appears to be locked.'],\r\n            options: [\r\n                {\r\n                    type: StageOptionType.DIFFICULTY_CHECK,\r\n                    text: 'Break the chest open',\r\n                    requirements: {\r\n                        strength: 2,\r\n                    },\r\n                    difficultyCheck: 10,\r\n                    outcomes: {},\r\n                },\r\n                {\r\n                    type: StageOptionType.DIFFICULTY_CHECK,\r\n                    text: 'Pick the lock',\r\n                    requirements: {\r\n                        dexterity: 3,\r\n                    },\r\n                    difficultyCheck: 16,\r\n                    outcomes: {},\r\n                },\r\n                {\r\n                    type: StageOptionType.DIFFICULTY_CHECK,\r\n                    text: 'Check the chest for traps',\r\n                    requirements: {\r\n                        wisdom: 1,\r\n                    },\r\n                    difficultyCheck: 18,\r\n                    outcomes: {},\r\n                },\r\n                {\r\n                    type: StageOptionType.DIFFICULTY_CHECK,\r\n                    text: 'Open the chest using magic',\r\n                    requirements: {\r\n                        intelligence: 6,\r\n                    },\r\n                    difficultyCheck: 18,\r\n                    outcomes: {},\r\n                },\r\n                {\r\n                    type: StageOptionType.FLAVOUR,\r\n                    text: 'Ignore the chest',\r\n                    nextStageId: 30,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 10,\r\n            type: EncounterStageType.OPTIONS,\r\n            text: ['You attempt to fight the mimic!'],\r\n            options: [],\r\n        },\r\n        {\r\n            id: 20,\r\n            type: EncounterStageType.OPTIONS,\r\n            text: ['You attempt to escape.'],\r\n            options: [],\r\n        },\r\n        {\r\n            id: 30,\r\n            type: EncounterStageType.END_SCENE,\r\n            text: ['You ignore the chest and move on.'],\r\n            continueText: 'Move on',\r\n        },\r\n    ],\r\n};\r\n","import { Component, h, VNode } from 'preact';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { noop } from '../common/functions';\r\nimport './CombatSandbox1.scss';\r\nimport { EncounterView } from './components/EncounterView/EncounterView';\r\nimport { ConnectedPlayerConfigPanel } from './components/PlayerConfigPanel/PlayerConfigPanel';\r\nimport { encounter1 } from './encounter1';\r\nimport { Scene } from './enums';\r\nimport { Player } from './Player';\r\nimport { registerEncounter } from './redux/actions/encounter-actions';\r\nimport { setScene } from './redux/actions/game-actions';\r\nimport { setPlayer } from './redux/actions/player-actions';\r\nimport { defaultPlayer } from './redux/reducers/player-reducer';\r\nimport { State } from './redux/store';\r\n\r\nexport interface CombatSandbox1Props {\r\n    player: Player;\r\n    load: () => void;\r\n}\r\n\r\nexport class CombatSandbox1 extends Component<CombatSandbox1Props> {\r\n    public static defaultProps?: Pick<CombatSandbox1Props, any> = {\r\n        load: noop,\r\n    };\r\n\r\n    public constructor(props: CombatSandbox1Props) {\r\n        super(props);\r\n        props.load();\r\n    }\r\n\r\n    public render({ player }: CombatSandbox1Props): VNode {\r\n        return (\r\n            <div className=\"CombatSandbox1\">\r\n                <div className=\"config-panel\">\r\n                    <div className=\"panel-header\">\r\n                        <h2>Configuration</h2>\r\n                    </div>\r\n                    <ConnectedPlayerConfigPanel />\r\n                </div>\r\n                <div className=\"encounter-panel\">\r\n                    <div className=\"panel-header\">\r\n                        <h2>Encounter</h2>\r\n                    </div>\r\n                    <EncounterView />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: State): Partial<CombatSandbox1Props> {\r\n    return {\r\n        player: state.player,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): Partial<CombatSandbox1Props> {\r\n    return {\r\n        load(): void {\r\n            dispatch(registerEncounter(encounter1));\r\n            dispatch(setPlayer(defaultPlayer()));\r\n            dispatch(setScene(Scene.ENCOUNTER_SELECT));\r\n        },\r\n    };\r\n}\r\n\r\nexport const ConnectedCombatSandbox1 = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CombatSandbox1 as any);\r\n","import { Action, Reducer } from 'redux';\r\nimport { Scene } from '../../enums';\r\nimport { GameActions } from '../actions/game-actions';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nconst reducers: Record<string, Reducer<Scene>> = {\r\n    [GameActions.SET_SCENE]: setSceneReducer,\r\n};\r\n\r\nconsole.log(Scene);\r\n\r\nexport function currentSceneReducer(\r\n    currentScene = Scene.ENCOUNTER_SELECT,\r\n    action: Action\r\n): Scene {\r\n    const reducer = reducers[action.type];\r\n    return reducer ? reducer(currentScene, action) : currentScene;\r\n}\r\n\r\nfunction setSceneReducer(\r\n    currentScene: Scene,\r\n    { payload }: PayloadAction<Scene>\r\n): Scene {\r\n    return payload;\r\n}\r\n","import { Action, Reducer } from 'redux';\r\nimport { Encounter } from '../../Encounter';\r\nimport { EncounterActions } from '../actions/encounter-actions';\r\nimport { PayloadAction } from '../redux-utils';\r\nimport { ActiveEncounter } from '../store';\r\n\r\nconst reducers: Record<string, Reducer<ActiveEncounter>> = {\r\n    [EncounterActions.START_ENCOUNTER]: startEncounterReducer,\r\n};\r\n\r\nexport function activeEncounterReducer(\r\n    activeEncounter: ActiveEncounter = null,\r\n    action: Action\r\n): ActiveEncounter {\r\n    const reducer = reducers[action.type];\r\n    return reducer ? reducer(activeEncounter, action) : activeEncounter;\r\n}\r\n\r\nfunction startEncounterReducer(\r\n    activeEncounter: ActiveEncounter,\r\n    { payload }: PayloadAction<Encounter>\r\n): ActiveEncounter {\r\n    return {\r\n        encounter: payload,\r\n        stage: payload.initialStageId,\r\n    };\r\n}\r\n","import { Action, Reducer } from 'redux';\r\nimport { Encounter } from '../../Encounter';\r\nimport { EncounterActions } from '../actions/encounter-actions';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nconst reducers: Record<string, Reducer<Record<string, Encounter>>> = {\r\n    [EncounterActions.REGISTER_ENCOUNTER]: registerEncounterReducer,\r\n};\r\n\r\nexport function allEncountersReducer(\r\n    encounters: Record<string, Encounter> = {},\r\n    action: Action\r\n): Record<string, Encounter> {\r\n    const reducer = reducers[action.type];\r\n    return reducer ? reducer(encounters, action) : encounters;\r\n}\r\n\r\nfunction registerEncounterReducer(\r\n    encounters: Record<string, Encounter>,\r\n    { payload }: PayloadAction<Encounter>\r\n): Record<string, Encounter> {\r\n    if (encounters[payload.id]) {\r\n        console.warn(\r\n            `Warning: duplicate encounter registration for ID \"${payload.id}\"`\r\n        );\r\n    }\r\n    return { ...encounters, [payload.id]: payload };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { EncounterState } from '../store';\r\nimport { activeEncounterReducer } from './active-encounter-reducer';\r\nimport { allEncountersReducer } from './all-encounters-reducer';\r\n\r\nexport const encounterReducer = combineReducers<EncounterState>({\r\n    all: allEncountersReducer,\r\n    active: activeEncounterReducer,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { currentSceneReducer } from './reducers/current-scene-reducer';\r\nimport { encounterReducer } from './reducers/encounter-reducer';\r\nimport { playerReducer } from './reducers/player-reducer';\r\nimport { State } from './store';\r\n\r\nexport const rootReducer = combineReducers<State>({\r\n    player: playerReducer,\r\n    encounter: encounterReducer,\r\n    currentScene: currentSceneReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/index';\r\nimport { Encounter } from '../Encounter';\r\nimport { Scene } from '../enums';\r\nimport { Player } from '../Player';\r\nimport { rootReducer } from './root-reducer';\r\n\r\nexport interface ActiveEncounter {\r\n    encounter: Encounter;\r\n    stage: number;\r\n}\r\n\r\nexport interface EncounterState {\r\n    all: Record<string, Encounter>;\r\n    active: ActiveEncounter;\r\n}\r\n\r\nexport interface State {\r\n    player: Player;\r\n    currentScene: Scene;\r\n    encounter: EncounterState;\r\n}\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import { h, render } from 'preact';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedCombatSandbox1 } from './combat-sandbox-1/CombatSandbox1';\r\nimport { store } from './combat-sandbox-1/redux/store';\r\nimport './index.scss';\r\n\r\nconst appRoot = document.getElementById('app-root');\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <ConnectedCombatSandbox1 />\r\n    </Provider>,\r\n    appRoot\r\n);\r\n"],"sourceRoot":""}