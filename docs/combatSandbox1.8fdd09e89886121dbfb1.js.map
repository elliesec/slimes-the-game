{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/combat-sandbox-1/redux/actions/player-actions.ts","webpack:///./src/combat-sandbox-1/redux/reducers/player-reducer.ts","webpack:///./src/combat-sandbox-1/components/PlayerConfigPanel/PlayerConfigPanelInput.tsx","webpack:///./src/combat-sandbox-1/components/PlayerConfigPanel/PlayerConfigPanel.tsx","webpack:///./src/combat-sandbox-1/CombatSandbox1.tsx","webpack:///./src/common/functions.ts","webpack:///./src/combat-sandbox-1/redux/root-reducer.ts","webpack:///./src/combat-sandbox-1/redux/store.ts","webpack:///./src/combatSandbox1.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PlayerActions","setPlayer","player","type","SET_PLAYER","payload","setStat","statName","SET_PLAYER_STAT","reducerMap","SET_PLAYER_DESCRIPTION","PlayerConfigPanelInput","props","htmlFor","id","label","ConnectedPlayerConfigPanel","state","dispatch","maxWillpower","willpower","strength","dexterity","constitution","wisdom","intelligence","charisma","e","currentTarget","setDescription","Number","onPlayerReset","onNameChange","onStrengthChange","onDexterityChange","onConstitutionChange","onWisdomChange","onIntelligenceChange","onCharismaChange","onMaxWillpowerChange","onWillpowerChange","className","onClick","onChange","min","super","defaultProps","load","args","ConnectedCombatSandbox1","rootReducer","action","reducer","store","appRoot","document","getElementById"],"mappings":"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","file":"combatSandbox1.8fdd09e89886121dbfb1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/slimes-the-game\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([40,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Player, PlayerDescription, PlayerStats } from '../../Player';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nexport enum PlayerActions {\r\n    SET_PLAYER = 'SET_PLAYER',\r\n    SET_PLAYER_DESCRIPTION = 'SET_PLAYER_DESCRIPTION',\r\n    SET_PLAYER_STAT = 'SET_PLAYER_STAT',\r\n}\r\n\r\nexport interface PlayerStatUpdate {\r\n    statName: keyof PlayerStats;\r\n    value: number;\r\n}\r\n\r\nexport interface PlayerDescriptionUpdate {\r\n    key: keyof PlayerDescription;\r\n    value: string;\r\n}\r\n\r\nexport function setPlayer(player: Player): PayloadAction<Player> {\r\n    return { type: PlayerActions.SET_PLAYER, payload: player };\r\n}\r\n\r\nexport function setDescription(\r\n    key: keyof PlayerDescription,\r\n    value: string\r\n): PayloadAction<PlayerDescriptionUpdate> {\r\n    return {\r\n        type: PlayerActions.SET_PLAYER_DESCRIPTION,\r\n        payload: { key, value },\r\n    };\r\n}\r\n\r\nexport function setStat(\r\n    statName: keyof PlayerStats,\r\n    value: number\r\n): PayloadAction<PlayerStatUpdate> {\r\n    return {\r\n        type: PlayerActions.SET_PLAYER_STAT,\r\n        payload: { statName, value },\r\n    };\r\n}\r\n","import { Action, Reducer } from 'redux';\r\nimport { Player } from '../../Player';\r\nimport {\r\n    PlayerActions,\r\n    PlayerDescriptionUpdate,\r\n    PlayerStatUpdate,\r\n} from '../actions/player-actions';\r\nimport { PayloadAction } from '../redux-utils';\r\n\r\nconst reducerMap: Record<string, Reducer<Player>> = {\r\n    [PlayerActions.SET_PLAYER]: setPlayerReducer,\r\n    [PlayerActions.SET_PLAYER_DESCRIPTION]: setPlayerDescriptionReducer,\r\n    [PlayerActions.SET_PLAYER_STAT]: setPlayerStatReducer,\r\n};\r\n\r\nexport function playerReducer(\r\n    player = defaultPlayer(),\r\n    action: Action\r\n): Player {\r\n    const reducer = reducerMap[action.type];\r\n    return reducer ? reducer(player, action) : player;\r\n}\r\n\r\nexport function defaultPlayer(): Player {\r\n    return {\r\n        name: 'Heroine',\r\n        maxWillpower: 10,\r\n        willpower: 10,\r\n        strength: 2,\r\n        dexterity: 2,\r\n        constitution: 2,\r\n        wisdom: 2,\r\n        intelligence: 2,\r\n        charisma: 2,\r\n    };\r\n}\r\n\r\nfunction setPlayerReducer(\r\n    player: Player,\r\n    { payload }: PayloadAction<Player>\r\n): Player {\r\n    if (payload === player) {\r\n        return player;\r\n    }\r\n    return { ...payload };\r\n}\r\n\r\nfunction setPlayerDescriptionReducer(\r\n    player: Player,\r\n    { payload: { key, value } }: PayloadAction<PlayerDescriptionUpdate>\r\n): Player {\r\n    if (player[key] === value) {\r\n        return player;\r\n    }\r\n    return { ...player, [key]: value };\r\n}\r\n\r\nfunction setPlayerStatReducer(\r\n    player: Player,\r\n    { payload: { statName, value } }: PayloadAction<PlayerStatUpdate>\r\n): Player {\r\n    if (player[statName] === value) {\r\n        return player;\r\n    }\r\n    return { ...player, [statName]: value };\r\n}\r\n","import { h, VNode } from 'preact';\r\nimport { JSXInternal } from 'preact/src/jsx';\r\nimport HTMLAttributes = JSXInternal.HTMLAttributes;\r\n\r\nexport interface PlayerConfigPanelInputProps<T>\r\n    extends HTMLAttributes<HTMLInputElement> {\r\n    id: string;\r\n    label: string;\r\n}\r\n\r\nexport const PlayerConfigPanelInput = <T extends unknown>(\r\n    props: PlayerConfigPanelInputProps<T>\r\n): VNode => (\r\n    <label htmlFor={props.id}>\r\n        <span>{props.label}:</span>\r\n        <input {...props} />\r\n    </label>\r\n);\r\n","import { h, VNode } from 'preact';\r\nimport { JSXInternal } from 'preact/src/jsx';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { Callback } from '../../../common/functions';\r\nimport { Player } from '../../Player';\r\nimport {\r\n    setDescription,\r\n    setPlayer,\r\n    setStat,\r\n} from '../../redux/actions/player-actions';\r\nimport { defaultPlayer } from '../../redux/reducers/player-reducer';\r\nimport { State } from '../../redux/store';\r\nimport './PlayerConfigPanel.scss';\r\nimport { PlayerConfigPanelInput } from './PlayerConfigPanelInput';\r\nimport TargetedEvent = JSXInternal.TargetedEvent;\r\n\r\nexport interface PlayerConfigPanelProps {\r\n    player: Player;\r\n    onPlayerReset: () => void;\r\n    onNameChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onStrengthChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onDexterityChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onConstitutionChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onWisdomChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onIntelligenceChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onCharismaChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onMaxWillpowerChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n    onWillpowerChange: Callback<TargetedEvent<HTMLInputElement>>;\r\n}\r\n\r\nexport const PlayerConfigPanel = ({\r\n    player,\r\n    onPlayerReset,\r\n    onNameChange,\r\n    onStrengthChange,\r\n    onDexterityChange,\r\n    onConstitutionChange,\r\n    onWisdomChange,\r\n    onIntelligenceChange,\r\n    onCharismaChange,\r\n    onMaxWillpowerChange,\r\n    onWillpowerChange,\r\n}: PlayerConfigPanelProps): VNode => (\r\n    <div className=\"PlayerConfigPanel\">\r\n        <h3 className=\"header-with-buttons\">\r\n            <span>Player</span>\r\n            <button onClick={onPlayerReset}>Reset</button>\r\n        </h3>\r\n        <PlayerConfigPanelInput\r\n            id=\"name-input\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            value={player.name}\r\n            onChange={onNameChange}\r\n        />\r\n        <h4>Attributes</h4>\r\n        <div className=\"attribute-config\">\r\n            <PlayerConfigPanelInput\r\n                id=\"strength-input\"\r\n                label=\"Strength\"\r\n                type=\"number\"\r\n                value={player.strength}\r\n                min={1}\r\n                onChange={onStrengthChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"dexterity-input\"\r\n                label=\"Dexterity\"\r\n                type=\"number\"\r\n                value={player.dexterity}\r\n                min={1}\r\n                onChange={onDexterityChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"constitution-input\"\r\n                label=\"Constitution\"\r\n                type=\"number\"\r\n                value={player.constitution}\r\n                min={1}\r\n                onChange={onConstitutionChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"wisdom-input\"\r\n                label=\"Wisdom\"\r\n                type=\"number\"\r\n                value={player.wisdom}\r\n                min={1}\r\n                onChange={onWisdomChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"intelligence-input\"\r\n                label=\"Intelligence\"\r\n                type=\"number\"\r\n                value={player.intelligence}\r\n                min={1}\r\n                onChange={onIntelligenceChange}\r\n            />\r\n            <PlayerConfigPanelInput\r\n                id=\"charisma-input\"\r\n                label=\"Charisma\"\r\n                type=\"number\"\r\n                value={player.charisma}\r\n                min={1}\r\n                onChange={onCharismaChange}\r\n            />\r\n        </div>\r\n        <hr />\r\n        <h4>Resources</h4>\r\n        <PlayerConfigPanelInput\r\n            id=\"max-willpower-input\"\r\n            label=\"Max Willpower\"\r\n            type=\"number\"\r\n            value={player.maxWillpower}\r\n            min={1}\r\n            onChange={onMaxWillpowerChange}\r\n        />\r\n        <PlayerConfigPanelInput\r\n            id=\"willpower-input\"\r\n            label=\"Willpower\"\r\n            type=\"number\"\r\n            value={player.willpower}\r\n            min={1}\r\n            onChange={onWillpowerChange}\r\n        />\r\n    </div>\r\n);\r\n\r\nfunction mapStateToProps(state: State): Partial<PlayerConfigPanelProps> {\r\n    return {\r\n        player: state.player,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(\r\n    dispatch: Dispatch\r\n): Partial<PlayerConfigPanelProps> {\r\n    return {\r\n        onPlayerReset(): void {\r\n            dispatch(setPlayer(defaultPlayer()));\r\n        },\r\n        onNameChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = e.currentTarget.value;\r\n            dispatch(setDescription('name', value));\r\n        },\r\n        onStrengthChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('strength', value));\r\n        },\r\n        onDexterityChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('dexterity', value));\r\n        },\r\n        onConstitutionChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('constitution', value));\r\n        },\r\n        onWisdomChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('wisdom', value));\r\n        },\r\n        onIntelligenceChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('intelligence', value));\r\n        },\r\n        onCharismaChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('charisma', value));\r\n        },\r\n        onMaxWillpowerChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('maxWillpower', value));\r\n        },\r\n        onWillpowerChange(e: TargetedEvent<HTMLInputElement>): void {\r\n            const value = Number(e.currentTarget.value);\r\n            dispatch(setStat('willpower', value));\r\n        },\r\n    };\r\n}\r\n\r\nexport const ConnectedPlayerConfigPanel = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PlayerConfigPanel);\r\n","import { Component, h, VNode } from 'preact';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { noop } from '../common/functions';\r\nimport './CombatSandbox1.scss';\r\nimport { ConnectedPlayerConfigPanel } from './components/PlayerConfigPanel/PlayerConfigPanel';\r\nimport { Player } from './Player';\r\nimport { setPlayer } from './redux/actions/player-actions';\r\nimport { defaultPlayer } from './redux/reducers/player-reducer';\r\nimport { State } from './redux/store';\r\n\r\nexport interface CombatSandbox1Props {\r\n    player: Player;\r\n    load: () => void;\r\n}\r\n\r\nexport class CombatSandbox1 extends Component<CombatSandbox1Props> {\r\n    public static defaultProps?: Pick<CombatSandbox1Props, any> = {\r\n        load: noop,\r\n    };\r\n\r\n    public constructor(props: CombatSandbox1Props) {\r\n        super(props);\r\n    }\r\n\r\n    public render({ player }: CombatSandbox1Props): VNode {\r\n        return (\r\n            <div className=\"CombatSandbox1\">\r\n                <div className=\"config-panel\">\r\n                    <div className=\"panel-header\">\r\n                        <h2>Configuration</h2>\r\n                    </div>\r\n                    <ConnectedPlayerConfigPanel />\r\n                </div>\r\n                <div className=\"encounter-panel\">\r\n                    <div className=\"panel-header\">\r\n                        <h2>Encounter</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: State): Partial<CombatSandbox1Props> {\r\n    return {\r\n        player: state.player,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): Partial<CombatSandbox1Props> {\r\n    return {\r\n        load(): void {\r\n            dispatch(setPlayer(defaultPlayer()));\r\n        },\r\n    };\r\n}\r\n\r\nexport const ConnectedCombatSandbox1 = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CombatSandbox1 as any);\r\n","export type Callback<T> = (t: T) => void;\r\n\r\nexport function noop(...args: any[]): void {\r\n    return;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { playerReducer } from './reducers/player-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    player: playerReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/index';\r\nimport { Player } from '../Player';\r\nimport { rootReducer } from './root-reducer';\r\n\r\nexport interface State {\r\n    player: Player;\r\n}\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import { h, render } from 'preact';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedCombatSandbox1 } from './combat-sandbox-1/CombatSandbox1';\r\nimport { store } from './combat-sandbox-1/redux/store';\r\nimport './index.scss';\r\n\r\nconst appRoot = document.getElementById('app-root');\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <ConnectedCombatSandbox1 />\r\n    </Provider>,\r\n    appRoot\r\n);\r\n"],"sourceRoot":""}